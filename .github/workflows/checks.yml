name: Run checks and tests

on: pull_request

jobs:

  checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install ruff

      - name: Run linter checks with ruff
        run: ruff check

      - name: Run formatter checks with ruff
        run: ruff format --check

  tests-default:
    needs: checks
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.13"]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install pytest coverage
          pip install .

      - name: Run tests and generate coverage report
        run: |
          coverage run -m pytest
          coverage html
          coverage xml

      - name: Upload coverage report to Codecov
        if: ${{ matrix.python-version == 3.12 }}
        uses: codecov/codecov-action@v5 
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  tests-mpi:
    needs: tests-default
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.13"]
        mpi: ["openmpi"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup MPI
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install with mpi4py
        run: |
          pip install --upgrade pip
          pip install pytest
          pip install .[mpi]

      - name: Run tests
        run: pytest  -m mpi --run-marks-subset mpi tests/

  tests-redis:
    needs: tests-mpi
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ["3.13"]
        mpi: ["openmpi"]
        redis-version: ["7.4.0-v1"]
    steps:
      - uses: actions/checkout@v4
      - name: Setup MPI
        uses: mpi4py/setup-mpi@v1
        with:
          mpi: ${{ matrix.mpi }}
      - name: Start Redis
        uses: supercharge/redis-github-action@1.8.0
        with:
          redis-image: redis/redis-stack-server
          redis-version: ${{ matrix.redis-version }}
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install with mpi4py
        run: |
          pip install --upgrade pip
          pip install pytest
          pip install .[mpi,redis]

      - name: Run tests
        run: pytest  -m redis --run-marks-subset redis tests/